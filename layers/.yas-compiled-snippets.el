;;; Compiled snippets and support files for `layers'
;;; Snippet definitions:
;;;
(yas-define-snippets 'layers
                     '(("packages.el" ";;; packages.el --- oyqx layer packages file for Spacemacs.\n;;\n;; Copyright (c) 2012-2016 Sylvain Benner & Contributors\n;;\n;; Author: ok <ok@okdeiMac.local>\n;; URL: https://github.com/syl20bnr/spacemacs\n;;\n;; This file is not part of GNU Emacs.\n;;\n;;; License: GPLv3\n\n;;; Commentary:\n\n;; See the Spacemacs documentation and FAQs for instructions on how to implement\n;; a new layer:\n;;\n;;   SPC h SPC layers RET\n;;\n;;\n;; Briefly, each package to be installed or configured by this layer should be\n;; added to `oyqx-packages'. Then, for each package PACKAGE:\n;;\n;; - If PACKAGE is not referenced by any other Spacemacs layer, define a\n;;   function `oyqx/init-PACKAGE' to load and initialize the package.\n\n;; - Otherwise, PACKAGE is already referenced by another Spacemacs layer, so\n;;   define the functions `oyqx/pre-init-PACKAGE' and/or\n;;   `oyqx/post-init-PACKAGE' to customize the package as it is loaded.\n\n;;; Code:\n(setq oyqx-packages\n      '(\n   \n        ))\n\n(defconst oyqx-packages\n  '(\n    )\n  \"The list of Lisp packages required by the oyqx layer.\n\n\n\n  Each entry is either:\n\n  1. A symbol, which is interpreted as a package to be installed, or\n\n  2. A list of the form (PACKAGE KEYS...), where PACKAGE is the\n  name of the package to be installed or loaded, and KEYS are\n  any number of keyword-value-pairs.\n\n  The following keys are accepted:\n\n  - :excluded (t or nil): Prevent the package from being loaded\n  if value is non-nil\n\n  - :location: Specify a custom installation location.\n  The following values are legal:\n\n  - The symbol `elpa' (default) means PACKAGE will be\n  installed using the Emacs package manager.\n\n  - The symbol `local' directs Spacemacs to load the file at\n  `./local/PACKAGE/PACKAGE.el'\n\n  - A list beginning with the symbol `recipe' is a melpa\n  recipe.  See: https://github.com/milkypostman/melpa#recipe-format\")\n\n\n;;; packages.el ends here\n" "packages.el" nil nil nil "/Users/ok/Dropbox/spacemacs.d/layers/oyqx/packages.el" nil nil)
                       ("keybindings.el" "(global-set-key (kbd \"M-s-<left>\") 'winner-undo)\n(global-set-key (kbd \"M-s-<right>\") 'winner-redo)\n;;copy code\n(global-set-key (kbd \"s-C\") 'my/copy-code-as-rtf)\n;;copy file path\n(global-set-key [f1] 'my/search_snippet)\n(add-hook 'org-mode-hook\n          (lambda()\n            (define-key org-mode-map [f2] 'my/auto-sentence)\n          (define-key org-mode-map [f1] 'youdao-dictionary-search-at-point+)))\n\n\n\n(global-set-key [f2] 'prelude-copy-file-name-to-clipboard)\n\n(global-set-key [f3] 'my/commit_question)\n(global-set-key [f4] 'my/commit_answer)\n(global-set-key [f5] 'dotspacemacs/sync-configuration-layers)\n\n(global-set-key [f6] 'my/config)\n(global-set-key [f7] 'my/funcs)\n(global-set-key [f8] 'my/keybinding)\n;; (global-set-key [f9] 'spacemacs/find-dotfile)\n;; (add-hook 'ruby-mode-hook\n;;           (lambda()\n;;             (define-key ruby-mode-map [f9] 'my/search_rails)\n;;             )\n;;           )\n(add-hook 'rspec-mode-hook\n          (lambda()\n            (define-key rspec-mode-map [f9] 'my/search_rspec)))\n\n(global-set-key [f10] 'my/yas_reload)\n(global-set-key [f11] 'yas-new-snippet-default)\n\n\n(global-set-key [tab] 'tab-indent-or-complete)\n\n(with-eval-after-load 'projectile-rails\n  (evil-define-key 'normal ruby-mode-map (kbd \"RET\") #'projectile-rails-goto-file-at-point)\n  (evil-define-key 'normal haml-mod-map (kbd \"RET\") #'projectile-rails-goto-file-at-point)\n  (evil-define-key 'normal web-mod-map (kbd \"RET\") #'projectile-rails-goto-file-at-point)\n  )\n\n(add-hook 'neotree-mode-hook\n          (lambda ()\n            (define-key evil-normal-state-local-map (kbd \"TAB\") 'neotree-enter)\n            (define-key evil-normal-state-local-map (kbd \"q\") 'neotree-hide)\n            (define-key evil-normal-state-local-map (kbd \"RET\") 'neotree-enter)))\n\n(spacemacs/set-leader-keys \"me\" 'quickrun)\n(global-set-key (kbd \"s-O\") 'projectile-find-file)\n(global-set-key (kbd \"s-g\") 'avy-goto-char)\n(global-set-key (kbd \"s-<left>\") 'doc-view-last-page)\n(global-set-key (kbd \"s-<right>\") 'doc-view-next-page)\n(global-set-key (kbd \"C-<SPC>\") 'toggle-input-method) ;;chinese pyim\n\n\n;; search global\n(global-set-key (kbd \"s-w\") 'er/expand-region)\n(spacemacs/set-leader-keys \"odp\" 'youdao-dictionary-search-at-point+)\n(spacemacs/set-leader-keys \"odf\" 'find-by-pinyin-dired)\n;; (global-set-key (kbd \"s-f\") 'helm-ag)\n;; (global-set-key (kbd \"C-k\") 'delete-line-no-kill)\n(global-set-key (kbd \"s-/\") 'spacemacs/comment-or-uncomment-lines)\n(global-set-key (kbd \"C-s-<up>\") 'move-text-up)\n(global-set-key (kbd \"C-s-<down>\") 'move-text-down)\n(global-set-key (kbd \"s-d\") 'delete-line-no-kill)\n(global-set-key (kbd \"s-y\") 'spacemacs/copy-and-comment-lines)\n;; (bind-key* \"s-r\" 'browser-refresh--chrome-applescript)\n(bind-key* \"s-3\" 'er/expand-region)\n(spacemacs/set-leader-keys \"oyv\" 'yas-visit-snippet-file)\n(spacemacs/set-leader-keys \"oyc\" 'yas-new-snippet)\n(spacemacs/set-leader-keys \"oyR\" 'my/yas_reload)\n\n\n(spacemacs/set-leader-keys \"ogc\" 'magit-commit)\n(spacemacs/set-leader-keys \"ogp\" 'magit-push-current)\n(spacemacs/set-leader-keys \"ogr\" 'vc-revert-buffer)\n(spacemacs/set-leader-keys \"oga\" 'my/commit_answer)\n(spacemacs/set-leader-keys \"ogq\" 'my/commit_question)\n;; (global-set-key [f8] 'ranger)\n;; (global-set-key [f9] 'neotree-project-dir)\n(spacemacs/set-leader-keys \"ot\" 'neotree-project-dir)\n(global-set-key (kbd \"s-F\") 'projectile-ag)\n;; (global-set-key (kbd \"C-s-u\") 'mwim-beginning-of-code-or-line)\n;; (global-set-key (kbd \"C-s-o\") 'mwim-end-of-code-or-line)\n(define-key evil-normal-state-map (kbd \"C-a\") 'evil-beginning-of-line)\n(define-key evil-insert-state-map (kbd \"C-a\") 'beginning-of-line)\n(define-key evil-visual-state-map (kbd \"C-a\") 'evil-beginning-of-line)\n(define-key evil-motion-state-map (kbd \"C-a\") 'evil-beginning-of-line)\n;;行尾\n(define-key evil-normal-state-map (kbd \"C-e\") 'evil-end-of-line)\n(define-key evil-insert-state-map (kbd \"C-e\") 'end-of-line)\n(define-key evil-visual-state-map (kbd \"C-e\") 'evil-end-of-line)\n(define-key evil-motion-state-map (kbd \"C-e\") 'evil-end-of-line)\n(define-key evil-normal-state-map \"\\C-f\" 'evil-forward-char)\n(define-key evil-insert-state-map \"\\C-f\" 'evil-forward-char)\n(define-key evil-insert-state-map \"\\C-f\" 'evil-forward-char)\n(define-key evil-normal-state-map \"\\C-b\" 'evil-backward-char)\n(define-key evil-motion-state-map \"\\C-b\" 'evil-backward-char)\n(define-key evil-insert-state-map \"\\C-b\" 'evil-backward-char)\n(define-key evil-visual-state-map \"\\C-b\" 'evil-backward-char)\n(define-key evil-normal-state-map \"\\C-d\" 'evil-delete-char)\n(define-key evil-insert-state-map \"\\C-d\" 'evil-delete-char)\n(define-key evil-visual-state-map \"\\C-d\" 'evil-delete-char)\n(define-key evil-normal-state-map \"\\C-n\" 'evil-next-line)\n(define-key evil-insert-state-map \"\\C-n\" 'evil-next-line)\n(define-key evil-visual-state-map \"\\C-n\" 'evil-next-line)\n(define-key evil-normal-state-map \"\\C-p\" 'evil-previous-line)\n(define-key evil-insert-state-map \"\\C-p\" 'evil-previous-line)\n(define-key evil-visual-state-map \"\\C-p\" 'evil-previous-line)\n(define-key evil-normal-state-map \"\\C-w\" 'evil-delete)\n(define-key evil-insert-state-map \"\\C-w\" 'evil-delete)\n(define-key evil-visual-state-map \"\\C-w\" 'evil-delete)\n(define-key evil-normal-state-map \"\\C-y\" 'yank)\n(define-key evil-insert-state-map \"\\C-y\" 'yank)\n(define-key evil-visual-state-map \"\\C-y\" 'yank)\n(define-key evil-normal-state-map \"\\C-k\" 'kill-line)\n(define-key evil-insert-state-map \"\\C-k\" 'kill-line)\n(define-key evil-visual-state-map \"\\C-k\" 'kill-line)\n\n(define-key evil-normal-state-map \"Q\" 'call-last-kbd-macro)\n(define-key evil-visual-state-map \"Q\" 'call-last-kbd-macro)\n(define-key evil-normal-state-map (kbd \"TAB\") 'evil-undefine)\n\n(define-key evil-insert-state-map (kbd \"C-o\") 'evil-open-below)\n(define-key evil-normal-state-map (kbd \"C-o\") 'evil-open-below)\n(define-key evil-visual-state-map (kbd \"C-o\") 'evil-open-below)\n\n(define-key evil-insert-state-map (kbd \"C-S-o\") 'evil-open-above)\n(define-key evil-normal-state-map (kbd \"C-S-o\") 'evil-open-above)\n(define-key evil-visual-state-map (kbd \"C-S-o\") 'evil-open-above)\n\n(define-key evil-normal-state-map \"\\C-v\" 'clipboard-yank)\n(define-key evil-insert-state-map \"\\C-v\" 'clipboard-yank)\n(define-key evil-visual-state-map \"\\C-v\" 'clipboard-yank)\n\n\n(define-key evil-normal-state-map (kbd \"DEL\") 'backward-kill-word)\n;;del往上移动10行\n(define-key evil-normal-state-map (kbd \"-\") (lambda ()\n                                                (interactive)\n                                                (previous-line 10)\n                                                (evil-scroll-line-up 10)\n                                                ))\n;;=往下移动十行\n(define-key evil-normal-state-map (kbd \"=\") (lambda ()\n                                              (interactive)\n                                              (next-line 10)\n                                              (evil-scroll-line-down 10)\n                                              ))\n" "keybindings.el" nil nil nil "/Users/ok/Dropbox/spacemacs.d/layers/oyqx/keybindings.el" nil nil)
                       ("funcs.el" "(defun check-expansion ()\n  (save-excursion\n    (if (looking-at \"\\\\_>\") t\n      (backward-char 1)\n      (if (looking-at \"\\\\.\") t\n        (backward-char 1)\n        (if (looking-at \"->\") t nil)))))\n\n(defun do-yas-expand ()\n  (let ((yas/fallback-behavior 'return-nil))\n    (yas/expand)))\n\n(defun tab-indent-or-complete ()\n  (interactive)\n  (if (minibufferp)\n      (minibuffer-complete)\n    (if (or (not yas/minor-mode)\n            (null (do-yas-expand)))\n        (if (check-expansion)\n            (company-complete-common)\n          (indent-for-tab-command)))))\n(defun my/copy-code-as-rtf (&optional font-size)\n  (interactive \"P\")\n  (let* ((real-font-size\n          (if (and font-size\n                   (/= (prefix-numeric-value font-size) 4))\n              (abs font-size)\n            22))\n         (common-options\n          ;; (format \"--font Monaco --font-size %d %s -O rtf --style Breeze\"\n                  (format \"--font Monaco --font-size %d %s -O rtf --style Moria\"\n                  real-font-size\n                  (if (and font-size\n                           (or (= (prefix-numeric-value font-size) 4)\n                               (< (prefix-numeric-value font-size) 0)))\n                      \"--linenumbers\" \"\")))\n         (temp-buffer (get-buffer-create \" *code*\")))\n    (shell-command-on-region\n     (if (region-active-p) (region-beginning) (point-min))\n     (if (region-active-p) (region-end) (point-max))\n     (format \"highlight --syntax %s %s\"\n             (file-name-extension (buffer-file-name)) common-options)\n     temp-buffer)\n    (with-current-buffer temp-buffer\n      (goto-char (point-max))\n      (search-backward \"\\\\par\\\\pard\")\n      (delete-region (match-beginning 0) (match-end 0))\n      (shell-command-on-region (point-min) (point-max) \"pbcopy\")\n      (kill-buffer (current-buffer)))\n    (message \"Copied %s to pasteboard as RTF with font-size of %d\"\n             (if (region-active-p) \"region\" \"file\")\n             real-font-size)))\n(defun my/auto-sentence ()\n  (interactive)\n  (org-forward-sentence)\n  (insert \"\\n\\n\"))\n\n\n(defun my/translate()\n  (interactive)\n  (find-file \"/Users/ok/Dropbox/org/translate.org\")\n  )\n(defun my/env()\n  (interactive)\n  (find-file \"/Users/ok/Projects/config/env.sh\")\n  )\n\n(defun my/config()\n  (interactive)\n  (find-file \"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/settings/spacemacs.d/oyqx/config.el\")\n  )\n(defun my/keybinding()\n  (interactive)\n  (find-file \"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/settings/spacemacs.d/oyqx/keybindings.el\")\n  )\n(defun my/funcs()\n  (interactive)\n  (find-file \"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/settings/spacemacs.d/oyqx/funcs.el\")\n  )\n(defun my/packages()\n  (interactive)\n  (find-file \"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/settings/spacemacs.d/oyqx/packages.el\")\n  )\n;;replace-string with cmd+ r\n;;替换evil-delete的yank行为\n;; (defun bb/evil-delete (orig-fn beg end &optional type _ &rest args)\n;;   (apply orig-fn beg end type ?_ args))\n;; (advice-add 'evil-delete :around 'bb/evil-delete)\n;;================end\n\n(defun check-expansion ()\n  (save-excursion\n    (if (looking-at \"\\\\_>\") t\n      (backward-char 1)\n      (if (looking-at \"\\\\.\") t\n        (backward-char 1)\n        (if (looking-at \"->\") t nil)))))\n(defun evil-undefine ()\n  (interactive)\n  (let (evil-mode-map-alist)\n    (call-interactively (key-binding (this-command-keys)))))\n(defun neotree-project-dir ()\n  \"Open NeoTree using the git root.\"\n  (interactive)\n  (let ((project-dir (projectile-project-root))\n        (file-name (buffer-file-name)))\n    (if project-dir\n        (if (neotree-toggle)\n            (progn\n              (neotree-dir project-dir)\n              (neotree-find file-name)))\n      (message \"Could not find git project root.\"))))\n\n\n\n;; ;; 退出编辑模式自动切换输入法\n;; (defun exit-pyim()\n;;  message \"yesk\"\n;;   )\n\n;; ;;fasjdifouasdfiousdf\n;; (add-hook 'evil-insert-state-exit-hook 'exit-pyim)\n\n                                        ; reload yas\n(defun my/yas_reload()\n  (interactive)\n  (progn\n    (yas-recompile-all)\n    (yas-reload-all)\n    )\n  )\n(defun prelude-copy-file-name-to-clipboard ()\n  \"Copy the current buffer file name to the clipboard.\"\n  (interactive)\n  (let ((filename (if (equal major-mode 'dired-mode)\n                      default-directory\n                    (buffer-file-name))))\n    (when filename\n      (kill-new filename)\n      (message \"Copied buffer file name '%s' to the clipboard.\" filename))))\n;;snippet\n(defun delete-line-no-kill ()\n  \"Deletes a line, but does not put it in the kill-ring. (kinda)\"\n  (interactive)\n  (move-beginning-of-line 1)\n  (kill-line 1)\n  (setq kill-ring (cdr kill-ring)))\n(defun browser-refresh--chrome-applescript ()\n  (interactive)\n  (do-applescript\n   (format\n    \"\n    tell application \\\"Google Chrome\\\"\n    set winref to a reference to (first window whose title does not start with \\\"Developer Tools - \\\")\n    set winref's index to 1\n    reload active tab of winref\n    end tell\n    \" )))\n\n(defun my/manager()\n  ;; /Users/ok/github/app_all/appServerManage\n  (interactive)\n\n  (dired-other-frame \"/Users/ok/github/app_all/appServerManage/.\")\n  )\n(defun my/class_config()\n  (interactive)\n  (find-file \"/Users/ok/github/myfun/samples/config.yml\")\n  )\n(defun my/class_ruby()\n  (interactive)\n  (find-file \"/Users/ok/github/myfun/samples/create_course_folder_class.rb\")\n  )\n(defun my/exec-class-config()\n  (interactive)\n  (shell-command \"ruby /Users/ok/github/myfun/samples/create_course_folder_class.rb\")\n  )\n;;查找快捷键\n(defun my/search_snippet(x)\n  (interactive \"MEnter the string to be search:\")\n  ;; (message \"String: %s\" x)\n  ;; (find-grep-dired x \"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/settings/spacemacs.d/snippets\")\n  (find-grep-dired \"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/settings/spacemacs.d/snippets\" x)\n  )\n\n(defun my/commit_answer()\n  (interactive)\n  (shell-command \"ruby \\\"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/settings/myfun/commit_answer.rb\\\"\")\n  )\n\n(defun my/search_rspec(x)\n  (interactive \"MEnter Rspec String to search:\")\n  ;; (ag-dired-regexp x \"/Users/ok/Dropbox/source/rspec\")\n  (find-grep-dired \"/Users/ok/Dropbox/source/rspec\" x)\n  )\n\n(defun my/search_rails(x)\n  (interactive \"MEnter Rails String:\")\n  ;; (find-grep-dired x \"/Users/ok/Dropbox/source/rails\")\n  (find-grep-dired \"/Users/ok/Dropbox/source/rails\" x)\n  )\n;;如何等待输入\n(defun my/commit_question();;(x)\n  \"Ask age.\"\n  ;; (interactive \"nEnter your age: \")\n  (interactive)\n  ;; (message \"Name: %d\" x)\n  ;; (projectile-run-shell-command-in-root \"echo \\\"dfd\\\" %d\" x)\n  ;; (shell-command \"echo \\\"dfd\\\"\")\n  (progn\n    (projectile-run-shell)\n    )\n  )\n\n                                        ; (defun my/commit_question()\n                                        ;   (interactive)\n                                        ;   (projectile-run-shell-command-in-root \"ruby \\\"/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/settings/myfun/commit_question.rb\\\"\")\n                                        ;   )\n                                        ; (defun my/push_answer()\n                                        ;   (interactive)\n                                        ;   (shell-command\n                                        ;    (format \"/Users/ok/.rbenv/shims/ruby /Users/ok/github/myfun/commit_answer.rb %s\"\n                                        ;            (shell-quote-argument (buffer-file-name))))\n                                        ;   (revert-buffer t t t)\n                                        ;   )\n;;org mode自动实现格式化代码\n(defun indent-org-block-automatically ()\n  (when (org-in-src-block-p)\n    (org-edit-special)\n    (indent-region (point-min) (point-max))\n    (org-edit-src-exit)))\n(defun my/practise()\n  (interactive)\n  (progn\n    (org-open-file \"/Users/ok/Dropbox/org/itplace_practise/question_answer.org\" )\n    )\n  )\n\n;;设置启动项目\n(defun my/teacher()\n  (interactive)\n  (progn\n    (dired-other-frame \"~/Teacher/.\")\n    )\n\n\n  ;; (split-window-horizontally) ;; -> |\n  ;; (next-multiframe-window)\n  ;; (find-file \"~/github/web/www/app/controllers/application_controller.rb\")\n  ;; (split-window-vertically) ;;  -> --\n\n  ;; (next-multiframe-window)\n\n  ;; (find-file \"~/.spacemacs.d/mycus.el\")\n  ;; (next-multiframe-window)\n  ;; (dired \"~/github/web/www/.\")\n  ;; (find-file \"~/github/web/www/app/views/static_pages/home.html.erb\")\n  )\n(defun my/myfun()\n  (interactive)\n  (dired-other-frame \"~/github/myfun/.\")\n  ;; (split-window-horizontally) ;; -> |\n  ;; (next-multiframe-window)\n  ;; (find-file \"~/github/web/www/app/controllers/application_controller.rb\")\n  ;; (split-window-vertically) ;;  -> --\n\n  ;; (next-multiframe-window)\n\n  ;; (find-file \"~/.spacemacs.d/mycus.el\")\n  ;; (next-multiframe-window)\n  ;; (dired \"~/github/web/www/.\")\n  ;; (find-file \"~/github/web/www/app/views/static_pages/home.html.erb\")\n  )\n\n(defun my/www()\n  (interactive)\n  ( dired-other-frame\"~/github/www/.\")\n  ;; (split-window-horizontally) ;; -> |\n  ;; (next-multiframe-window)\n  ;; (find-file \"~/github/web/www/app/controllers/application_controller.rb\")\n  ;; (split-window-vertically) ;;  -> --\n\n  ;; (next-multiframe-window)\n\n  ;; (find-file \"~/.spacemacs.d/mycus.el\")\n  ;; (next-multiframe-window)\n  ;; (dired \"~/github/web/www/.\")\n  ;; (find-file \"~/github/web/www/app/views/static_pages/home.html.erb\")\n  )\n(defun my/appserver()\n  (interactive)\n  (dired-other-frame \"~/github/appserver/.\")\n  ;; (split-window-horizontally) ;; -> |\n  ;; (next-multiframe-window)\n  ;; (find-file \"~/github/web/www/app/controllers/application_controller.rb\")\n  ;; (split-window-vertically) ;;  -> kjkj--\n\n  ;; (next-multiframe-window)\n\n  ;; (find-file \"~/.spacemacs.d/mycus.el\")\n  ;; (next-multiframe-window)\n  ;; (dired \"~/github/web/www/.\")\n  ;; (find-file \"~/github/web/www/app/views/static_pages/home.html.erb\")\n  )\n" "funcs.el" nil nil nil "/Users/ok/Dropbox/spacemacs.d/layers/oyqx/funcs.el" nil nil)
                       ("config.el" "(add-hook 'ruby-mode-hook (lambda () (goto-address-mode -1)))\n(add-hook 'web-mode-hook (lambda () (goto-address-mode -1)))\n(spacemacs//set-monospaced-font   \"Source Code Pro\" \"方正硬笔楷书简体\" 14 18) ;设置等宽字体\n(setq tramp-ssh-controlmaster-options \"-o ControlMaster=auto -o ControlPath='tramp.%%C' -o ControlPersist=no\")\n(setq yas-snippet-dirs \"~/.spacemacs.d/snippets\")\n(setq  company-idle-delay 0.01)\n(setq  companSEEDDsz-minimum-prefix-length 1)\n(setq org-latex-pdf-process '(\"xelatex -interaction nonstopmode %f\"\n                              \"xelatex -interaction nonstopmode %f\"))\n(add-hook 'org-mode-hook (lambda () (setq truncate-lines nil)))\n(with-eval-after-load 'org\n;; (spacemacs//set-monospaced-font   \"Source Code Pro\" \"Hiragino Sans GB\" 14 16) ;设置等宽字体\n;;设置文学编程支持\n(org-babel-do-load-languages\n 'org-babel-load-languages\n '((perl . t)\n   (ruby . t)\n   (sh . t)\n   (js . t)\n   (latex .t)\n   (python . t)\n   (emacs-lisp . t)\n   (plantuml . t)\n   (ditaa . t)))\n(run-at-time 1 10 'indent-org-block-automatically)\n)\n(setq neo-smart-open t)\n(delete-selection-mode t)             ;;设置黏贴为替换,而不是append\n;; (global-set-key [f8] 'neotree-project-dir)\n(setq ranger-dont-show-binary t)\n(setq ranger-excluded-extensions '(\"DS_Store\" \"mkv\" \"iso\" \"mp4\"))\n\n; (setenv \"PATH\" path)\n; (setq exec-path\n;       (append\n;        (split-string-and-unquote path \":\"\n;                                  exec-path)))\n; (let ((path (shell-command-to-string \"~/Projects/config/env.sh; echo -n $PATH\")))\n  ;;auto save while lost focus\n  (add-hook 'focus-out-hook (lambda () (save-some-buffers t)))\n  (global-set-key (kbd \"s-r\") 'replace-stringn)\n  ;;shell exec alias\n\n(setq shell-command-switch \"-ic\")\n(if (eq system-type 'darwin)\n  ; something for OS X if true\n  ; optional something if not\n(setq shell-file-name \"zsh\")\n\n)\n\n\n(let ((eol-regexp \"[[:graph:]] ?\\\\(\\n\\\\)[^\\t\\n ]\"))\n  (font-lock-add-keywords nil\n                          `((,eol-regexp 1 '(face default display \" \")))))\n\n(visual-line-mode 1)\n" "config.el" nil nil nil "/Users/ok/Dropbox/spacemacs.d/layers/oyqx/config.el" nil nil)
                       ("README.org" "#+TITLE: oyqx layer\njust test\n# The maximum height of the logo should be 200 pixels.\n[[img/oyqx.png]]\n\n# TOC links should be GitHub style anchors.\n* Table of Contents                                        :TOC_4_gh:noexport:\n - [[#description][Description]]\n - [[#install][Install]]\n - [[#key-bindings][Key bindings]]\n\n* Description\nThis layer does wonderful things:\n  - thing01\n\n* Install\nTo use this configuration layer, add it to your =~/.spacemacs=. You will need to\nadd =oyqx= to the existing =dotspacemacs-configuration-layers= list in this\nfile.\n\n* Key bindings\n\n| Key Binding | Description    |\n|-------------+----------------|\n| ~SPC x x x~ | Does thing01   |\n# Use GitHub URLs if you wish to link a Spacemacs documentation file or its heading.\n# Examples:\n# [[https://github.com/syl20bnr/spacemacs/blob/master/doc/VIMUSERS.org#sessions]]\n# [[https://github.com/syl20bnr/spacemacs/blob/master/layers/%2Bfun/emoji/README.org][Link to Emoji layer README.org]]\n# If space-doc-mode is enabled, Spacemacs will open a local copy of the linked file.\n" "README.org" nil nil nil "/Users/ok/Dropbox/spacemacs.d/layers/oyqx/README.org" nil nil)))


;;; Do not edit! File generated at Tue Sep  5 11:58:28 2017
