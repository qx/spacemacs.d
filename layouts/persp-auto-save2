((def-persp nil ((def-buffer "init.el" "/Users/ok/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "1_Procs_exercise.rb" "/Users/ok/Teacher/2_ruby bit 2/1_Blocks, Procs & Lambdas/1_Procs_exercise.rb" ruby-mode) (def-buffer "1_The Game Class_tester.rb" "/Users/ok/Teacher/2_ruby bit 2/5_DSL_part 1_tester/1_The Game Class_tester.rb" ruby-mode) (def-buffer "2_The Library Class_tester.rb" "/Users/ok/Teacher/2_ruby bit 2/5_DSL_part 1_tester/2_The Library Class_tester.rb" ruby-mode)) (def-wconf (((min-height . 8) (min-width . 44) (min-height-ignore . 6) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 144) (min-pixel-width . 352) (min-pixel-height-ignore . 108) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 36) (min-pixel-width-safe . 32)) hc (pixel-width . 1280) (pixel-height . 1314) (total-width . 160) (total-height . 73) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 272) (pixel-height . 1314) (total-width . 34) (total-height . 73) (normal-height . 1.0) (normal-width . 0.21250000000000002) (buffer " *NeoTree*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated . t) (point . 1207) (start . 1))) (vc (last . t) (pixel-width . 1008) (pixel-height . 1314) (total-width . 126) (total-height . 73) (normal-height . 1.0) (normal-width . 0.7875) (combination-limit) (leaf (pixel-width . 1008) (pixel-height . 664) (total-width . 126) (total-height . 37) (normal-height . 0.501888189559422) (normal-width . 1.0) (buffer "2_The Library Class_tester.rb" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 704) (start . 520))) (leaf (last . t) (pixel-width . 1008) (pixel-height . 650) (total-width . 126) (total-height . 36) (normal-height . 0.49811181044057795) (normal-width . 1.0) (buffer "*quickrun*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 49) (start . 1)))))) (def-params nil) t nil nil))