((def-persp nil ((def-buffer "ruby bit 1" "~/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby bit 1/" dired-mode) (def-buffer "fixme.png" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby bit 1/level_2_methods and classes/styles/bigblow/images/fixme.png" image-mode) (def-buffer "bullet_gbutton_gray-7.png" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby_bits_slides_final.key/Data/bullet_gbutton_gray-7.png" image-mode) (def-buffer "PresetImageFill0-1.jpg" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby_bits_slides_final.key/Data/PresetImageFill0-1.jpg" image-mode) (def-buffer "PresetImageFill1-2.jpg" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby_bits_slides_final.key/Data/PresetImageFill1-2.jpg" image-mode) (def-buffer "1_unless_exercise.rb" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby bit 1/level_1_expression/1_unless_exercise.rb" ruby-mode) (def-buffer "3_implied nil_exercise.rb" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby bit 1/level_1_expression/3_implied nil_exercise.rb" ruby-mode) (def-buffer "Ruby" "~/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/" dired-mode) (def-buffer "5_conditional assign_exercise.rb" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby bit 1/level_1_expression/5_conditional assign_exercise.rb" ruby-mode) (def-buffer "7_conditional return 2_exercise.rb" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby bit 1/level_1_expression/7_conditional return 2_exercise.rb" ruby-mode) (def-buffer "init.el" "/Users/ok/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "level_3_classes.org" "/Users/ok/Library/Mobile Documents/com~apple~CloudDocs/emacs/Ruby/ruby bit 1/level_3_classes/level_3_classes.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 54) (min-height-ignore . 3) (min-width-ignore . 12) (min-height-safe . 1) (min-width-safe . 6) (min-pixel-height . 72) (min-pixel-width . 432) (min-pixel-height-ignore . 54) (min-pixel-width-ignore . 96) (min-pixel-height-safe . 18) (min-pixel-width-safe . 48)) hc (pixel-width . 2556) (pixel-height . 1418) (total-width . 320) (total-height . 78) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 272) (pixel-height . 1418) (total-width . 34) (total-height . 78) (normal-height . 1.0) (normal-width . 0.10563380281690149) (buffer " *NeoTree*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated . t) (point . 1950) (start . 704))) (leaf (pixel-width . 1140) (pixel-height . 1418) (total-width . 143) (total-height . 78) (normal-height . 1.0) (normal-width . 0.4460093896713615) (buffer "level_3_classes.org" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 5153) (start . 2040))) (leaf (last . t) (pixel-width . 1144) (pixel-height . 1418) (total-width . 143) (total-height . 78) (normal-height . 1.0) (normal-width . 0.4475743348982786) (buffer "*Org-Babel Error Output*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 30) (start . 1))))) (def-params nil) t nil nil))