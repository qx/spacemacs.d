((def-persp nil ((def-buffer "init.el" "/Users/ok/.spacemacs.d/init.el" emacs-lisp-mode) (def-buffer "1_struct_exercise.rb" "/Users/ok/Teacher/2_ruby bit 2/2_Dynamic Classes & Methods/1_struct_exercise.rb" ruby-mode) (def-buffer "3_alias_method_exercise.rb" "/Users/ok/Teacher/2_ruby bit 2/2_Dynamic Classes & Methods/3_alias_method_exercise.rb" ruby-mode) (def-buffer "4_define_method_exercise.rb" "/Users/ok/Teacher/2_ruby bit 2/2_Dynamic Classes & Methods/4_define_method_exercise.rb" ruby-mode) (def-buffer "2_extending struct_exercise.rb" "/Users/ok/Teacher/2_ruby bit 2/2_Dynamic Classes & Methods/2_extending struct_exercise.rb" ruby-mode) (def-buffer "2_Yielding to blocks_exercise.rb" "/Users/ok/Teacher/1_ruby bit 1/6_Blocks/2_Yielding to blocks_exercise.rb" ruby-mode) (def-buffer "1_iterating with blocks_exercise.rb" "/Users/ok/Teacher/1_ruby bit 1/6_Blocks/1_iterating with blocks_exercise.rb" ruby-mode) (def-buffer "3_passing arguments to Blocks_exercise.rb" "/Users/ok/Teacher/1_ruby bit 1/6_Blocks/3_passing arguments to Blocks_exercise.rb" ruby-mode) (def-buffer "4_returing values from blocks_exercise.rb" "/Users/ok/Teacher/1_ruby bit 1/6_Blocks/4_returing values from blocks_exercise.rb" ruby-mode) (def-buffer "5_using enumerable_exercise.rb" "/Users/ok/Teacher/1_ruby bit 1/6_Blocks/5_using enumerable_exercise.rb" ruby-mode) (def-buffer "6_refactoring with blocks_exercise.rb" "/Users/ok/Teacher/1_ruby bit 1/6_Blocks/6_refactoring with blocks_exercise.rb" ruby-mode) (def-buffer "1_expression.pdf" "/Users/ok/Teacher/1_ruby bit 1/1_expression_resources/1_expression.pdf" doc-view-mode)) (def-wconf (((min-height . 4) (min-width . 44) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 352) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1276) (pixel-height . 779) (total-width . 160) (total-height . 45) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 272) (pixel-height . 779) (total-width . 34) (total-height . 45) (normal-height . 1.0) (normal-width . 0.21159874608150475) (buffer " *NeoTree*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated . t) (point . 476) (start . 52))) (leaf (last . t) (pixel-width . 1004) (pixel-height . 779) (total-width . 126) (total-height . 45) (normal-height . 1.0) (normal-width . 0.7884012539184952) (buffer "1_expression.pdf" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 24) (start . 1))))) (def-params nil) t nil nil))